[package]
name = "replicante"
version = "0.7.0"
authors = ["Stefano Pogliani <stefano@spogliani.net>"]
edition = "2018"
build = "../../build.rs"

description = "Safe DataStore automation"
documentation = "https://www.replicante.io/docs"
homepage = "https://www.replicante.io/"
repository = "https://github.com/replicante-io/replicante"
readme = "../../README.md"
keywords = ["automation", "datastore", "operations"]
license = "MIT"


[[bin]]
name = "replicante"
path = "src/main.rs"


[lib]
name = "replicante"
path = "src/lib.rs"


[features]
default = [
  "action-debug",
]

# Built-in orchestrator actions to include.
action-debug = ["replicore_action_debug"]

# Additional introspection and debugging features.
journald = ["replicante_logging/journald"]


[dependencies]
actix-rt = "^1.0.0"
actix-web = { version = "^2.0.0", features = ["openssl"] }
chrono = "^0.4.6"
clap = "^2.31.2"
failure = "^0.1.5"
futures = "^0.3.4"
humthreads = "^0.2.0"
lazy_static = "^1.0.0"
openssl = "^0.10"
opentracingrust = "^0.4.0"
prometheus = { version = "^0.9.0", features = ["process"] }
reqwest = { version = "^0.10.4", features = ["blocking"] }
semver = "^0.11.0"
sentry = "^0.18.0"
serde = "^1.0.34"
serde_derive = "^1.0.34"
serde_json = "^1.0.13"
serde_yaml = "^0.8.0"
slog = "^2.1.1"
slog-scope = "^4.0.1"
slog-stdlog = "^4.0.0"
uuid = { version = "^0.8.0", features = ["serde", "v4"] }

replicante_agent_client = { path = "../../agent/client" }
replicante_cluster_discovery = { path = "../../cluster/discovery" }
replicante_externals_kafka = { path = "../../externals/kafka" }
replicante_externals_mongodb = { path = "../../externals/mongodb" }
replicante_logging = { path = "../../common/logging" }
replicante_models_api = { path = "../../common/models/api" }
replicante_models_core = { path = "../../models/core" }
replicante_service_coordinator = { path = "../../service/coordinator" }
replicante_service_healthcheck = { path = "../../service/healthcheck" }
replicante_service_tasks = { path = "../../service/tasks" }
replicante_store_primary = { path = "../../store/primary" }
replicante_store_view = { path = "../../store/view" }
replicante_stream = { path = "../../stream/stream" }
replicante_stream_events = { path = "../../stream/events" }
replicante_util_actixweb = { path = "../../common/util/actixweb" }
replicante_util_failure = { path = "../../common/util/failure" }
replicante_util_tracing = { path = "../../common/util/tracing" }
replicante_util_upkeep = { path = "../../common/util/upkeep" }

replicore_action_debug = { path = "../../core/orchestrator_action/debug", optional = true }
replicore_cluster_orchestrate = { path = "../../core/cluster/orchestrate" }
replicore_component_discovery_scheduler = { path = "../../core/components/discovery_scheduler" }
replicore_component_orchestrator_scheduler = { path = "../../core/components/orchestrator_scheduler" }
replicore_component_viewupdater = { path = "../../core/components/viewupdater" }
replicore_iface_orchestrator_action = { path = "../../core/interface/orchestrator_action" }
replicore_models_tasks = { path = "../../models/tasks" }
replicore_task_discovery = { path = "../../core/tasks/discovery" }
replicore_task_orchestrator = { path = "../../core/tasks/orchestrator" }
replicore_util_errors = { path = "../../core/util/errors" }


[build-dependencies]
git2 = "^0.13.0"


[dev-dependencies]
replicante_store_primary = { path = "../../store/primary", features = ["with_test_support"] }
replicante_store_view = { path = "../../store/view", features = ["with_test_support"] }
replicante_stream_events = { path = "../../stream/events", features = ["with_test_support"] }

replicore_models_tasks = { path = "../../models/tasks", features = ["with_test_support"] }
