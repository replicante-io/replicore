[package]
name = "replicante_cluster_fetcher"
version = "0.1.2"
authors = ["Stefano Pogliani <stefano@spogliani.net>"]
edition = "2018"

description = "Cluster status fetcher for Replicante Core"
documentation = "https://www.replicante.io/docs"
homepage = "https://www.replicante.io/"
repository = "https://github.com/replicante-io/replicante"
keywords = ["automation", "datastore", "operations"]
license = "MIT"


[badges]
maintenance = { status = "actively-developed" }


[dependencies]
anyhow = "^1.0.0"
chrono = { version = "^0.4.0", features = ["serde"] }
failure = "^0.1.5"
failure_derive = "^0.1.5"
lazy_static = "^1.0.0"
opentracingrust = "^0.4.0"
prometheus = "^0.9.0"
sentry = "^0.18.0"
serde_json = "^1.0.0"
slog = "^2.1.1"
thiserror = "^1.0"
uuid = { version = "^0.8.0", features = ["serde", "v4"] }

replicante_agent_client = { path = "../../agent/client" }
replicante_models_agent = { path = "../../common/models/agent" }
replicante_models_core = { path = "../../models/core" }
replicante_service_coordinator = { path = "../../service/coordinator" }
replicante_store_primary = { path = "../../store/primary" }
replicante_stream_events = { path = "../../stream/events" }
replicante_util_failure = { path = "../../common/util/failure" }
replicante_util_tracing = { path = "../../common/util/tracing" }
replicore_cluster_view = { path = "../../core/cluster/view" }
replicore_iface_orchestrator_action = { path = "../../core/interface/orchestrator_action" }
replicore_util_errors = { path = "../../core/util/errors" }

[dev-dependencies]
replicante_agent_client = { path = "../../agent/client", features = ["with_test_support"] }
replicante_store_primary = { path = "../../store/primary", features = ["with_test_support"] }
replicante_stream_events = { path = "../../stream/events", features = ["with_test_support"] }

[dev-dependencies.replicore_iface_orchestrator_action]
features = ["test-api"]
path = "../../core/interface/orchestrator_action"
